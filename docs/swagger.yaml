basePath: /api
definitions:
  api.ErrorResponse:
    properties:
      error:
        description: |-
          Error message
          required: true
        example: Internal Server Error
        type: string
    type: object
  api.MessageResponse:
    properties:
      message:
        description: |-
          Success message
          required: true
        example: Book deleted successfully
        type: string
    type: object
  models.Book:
    properties:
      author:
        description: |-
          Author of the book
          required: true
        type: string
      available:
        description: Availability status of the book
        type: boolean
      quantity:
        description: |-
          Quantity of the book available
          required: true
        type: integer
      title:
        description: |-
          Title of the book
          required: true
        type: string
    required:
    - author
    - quantity
    - title
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple CRUD API for managing books.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Go CRUD API
  version: "1.0"
paths:
  /books:
    get:
      description: Get a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Retrieve all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the database
      parameters:
      - description: Book to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      description: Remove a book from the database by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete a book
      tags:
      - books
    get:
      description: Get details of a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Retrieve a single book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update details of a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book information
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update a book
      tags:
      - books
swagger: "2.0"
